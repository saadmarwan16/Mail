{"version":3,"sources":["actions/auth.js","actions/alert.js","components/Navbar.js","hocs/Layout.js","containers/Compose.js"],"names":["login","email","password","dispatch","a","config","headers","body","JSON","stringify","axios","post","process","res","type","LOGIN_SUCCESS","payload","data","setAlert","LOGIN_FAIL","signup","name","confirmation","SIGNUP_SUCCESS","SIGNUP_FAIL","logout","LOGOUT","msg","alertType","timeout","id","uuid","SET_ALERT","setTimeout","REMOVE_ALERT","connect","state","auth","className","exact","to","onClick","Layout","props","children","isAuthenticated","useState","isSent","setIsSent","sender","recipients","subject","composeBody","formData","setFormData","onChange","e","target","value","content","onSubmit","preventDefault","localStorage","getItem","then","success","error","_err","disabled","autoFocus","placeholder"],"mappings":"+QAUaA,EAAQ,SAACC,EAAOC,GAAR,8CAAqB,WAAMC,GAAN,mBAAAC,EAAA,6DAChCC,EAAS,CACXC,QAAS,CACL,eAAgB,qBAIlBC,EAAOC,KAAKC,UAAU,CAAER,QAAOC,aAPC,kBAUhBQ,IAAMC,KAAN,UAAcC,gCAAd,eAA+DL,EAAMF,GAVrD,OAU5BQ,EAV4B,OAYlCV,EAAS,CACLW,KAAMC,IACNC,QAASH,EAAII,KACbhB,MAAOA,IAGXE,EAASe,YAAS,mBAAoB,YAlBJ,kDAoBlCf,EAAS,CACLW,KAAMK,MAGVhB,EAASe,YAAS,qBAAsB,WAxBN,0DAArB,uDA4BRE,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMpB,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAUoB,EAA1B,EAA0BA,aAA1B,8CAA6C,WAAMnB,GAAN,mBAAAC,EAAA,6DACzDC,EAAS,CACXC,QAAS,CACL,eAAgB,qBAIlBC,EAAOC,KAAKC,UAAU,CAAEY,OAAMpB,QAAOC,WAAUoB,iBAPU,kBAUzCZ,IAAMC,KAAN,UAAcC,gCAAd,wBAAwEL,EAAMF,GAVrC,OAUrDQ,EAVqD,OAY3DV,EAAS,CACLW,KAAMS,IACNP,QAASH,EAAII,OAGjBd,EAASH,EAAMC,EAAOC,IAjBqC,kDAmB3DC,EAAS,CACLW,KAAMU,MAGVrB,EAASe,YAAS,4BAA6B,WAvBY,0DAA7C,uDA2BTO,EAAS,kBAAM,SAAAtB,GACxBA,EAASe,YAAS,oBAAqB,YACvCf,EAAS,CAAEW,KAAMY,IAAQzB,MAAO,U,iCCnEpC,uDAGaiB,EAAW,SAACS,EAAKC,GAAN,IAAiBC,EAAjB,uDAA2B,IAA3B,OAAoC,SAAA1B,GACxD,IAAM2B,EAAKC,cACX5B,EAAS,CACLW,KAAMkB,IACNhB,QAAS,CAAEW,MAAKC,YAAWE,QAG/BG,YAAW,kBAAM9B,EAAS,CAAEW,KAAMoB,IAAclB,QAASc,MAAOD,M,0ECgCrDM,eAFS,SAAAC,GAAK,MAAK,CAAEnC,MAAOmC,EAAMC,KAAKpC,SAEd,CAAEwB,YAA3BU,EApCA,SAAC,GAAuB,IAArBV,EAAoB,EAApBA,OAAQxB,EAAY,EAAZA,MACtB,OACI,qCACI,oBAAIqC,UAAU,sBAAd,SAAqCrC,IAErC,cAAC,IAAD,CAASqC,UAAU,+CAA+CC,OAAK,EAACC,GAAG,SAA3E,mBAGA,cAAC,IAAD,CAASF,UAAU,mDAAmDE,GAAG,WAAzE,qBAGA,cAAC,IAAD,CAASF,UAAU,+CAA+CE,GAAG,QAArE,kBAGA,cAAC,IAAD,CAASF,UAAU,+CAA+CE,GAAG,WAArE,qBAGA,cAAC,IAAD,CAASF,UAAU,+CAA+CE,GAAG,SAArE,mBAGA,cAAC,IAAD,CAAMF,UAAU,kDAAkDE,GAAG,UAAUC,QAAShB,EAAxF,qBAIA,oBAAIa,UAAU,0BCXXI,IAhBA,SAACC,GACZ,OACI,8BACI,qBAAKL,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,cAAC,EAAD,IAEA,qBAAKA,UAAU,YAAf,SACKK,EAAMC,oB,uJC2GhBT,uBALS,SAAAC,GAAK,MAAK,CAC9BS,gBAAiBT,EAAMC,KAAKQ,gBAC5B5C,MAAOmC,EAAMC,KAAKpC,SAGkB,CAAEiB,aAAUO,YAArCU,EA5GC,SAAC,GAAkD,IAAhDjB,EAA+C,EAA/CA,SAAU2B,EAAqC,EAArCA,gBAAiBpB,EAAoB,EAApBA,OAAQxB,EAAY,EAAZA,MAAY,EAClC6C,oBAAS,GADyB,mBACvDC,EADuD,KAC/CC,EAD+C,OAG9BF,mBAAS,CACrCG,OAAQhD,EACRiD,WAAY,GACZC,QAAS,GACTC,YAAa,KAP6C,mBAGvDC,EAHuD,KAG7CC,EAH6C,KAUtDL,EAA6CI,EAA7CJ,OAAQC,EAAqCG,EAArCH,WAAYC,EAAyBE,EAAzBF,QAASC,EAAgBC,EAAhBD,YAE/BG,EAAW,SAAAC,GAAC,OAAIF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOpC,KAAOmC,EAAEC,OAAOC,UAE3E,IAAKb,EAED,OADApB,IACO,cAAC,IAAD,CAAUe,GAAG,YAGxB,GAAIO,EACA,OAAO,cAAC,IAAD,CAAUP,GAAG,UAmCxB,OACI,eAAC,IAAD,WACI,eAAC,IAAD,WACI,mDAEA,sBAAMnB,KAAK,4CAA4CsC,QAAQ,oBAGnE,sBAAKrB,UAAU,gBAAf,UACI,oBAAIA,UAAU,yBAAd,uBAEA,uBAAMsB,SA3CD,SAAAJ,GACbA,EAAEK,iBAEF,IAAMxD,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BwD,aAAaC,QAAQ,YAIlDxD,EAAOC,KAAKC,UAAU,CACxBwC,OAAQA,EACRC,WAAYA,EACZC,QAASA,EACT5C,KAAM6C,IAGV,IACI1C,IAAMC,KAAN,UAAcC,gCAAd,uBAAuEL,EAAMF,GAC5E2D,MAAK,SAAAnD,GACEA,EAAII,KAAKgD,SACT/C,EAASL,EAAII,KAAKgD,QAAS,WAC3BjB,GAAU,IAEV9B,EAAS,SAAD,OAAUL,EAAII,KAAKiD,OAAS,aAG9C,MAAMC,GACJjD,EAAS,6BAA8B,YAenC,UACI,sBAAKoB,UAAU,mCAAf,kBAEI,uBAAO8B,UAAQ,EAAC9B,UAAU,4CACtBjB,KAAK,SAASqC,MAAOT,OAG7B,sBAAKX,UAAU,uCAAf,gBAEI,uBAAO+B,WAAS,EAAC/B,UAAU,gDACvBjB,KAAK,aAAaiD,YAAY,eAAeZ,MAAOR,EAAYK,SAAUA,OAGlF,qBAAKjB,UAAU,oCAAf,SACI,uBAAOA,UAAU,6CAA6CgC,YAAY,UACtEjD,KAAK,UAAUqC,MAAOP,EAASI,SAAUA,MAGjD,qBAAKjB,UAAU,iCAAf,SACI,0BAAUA,UAAU,0CAA0CgC,YAAY,OACtEjD,KAAK,cAAckC,SAAUA,EAAUG,MAAON,MAGtD,uBAAOtC,KAAK,SAASwB,UAAU","file":"static/js/11.d52b2861.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { setAlert } from './alert'\r\nimport {\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n} from './types'\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ email, password })\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_ROOT_URL}/api/token/`, body, config)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data,\r\n            email: email\r\n        })\r\n\r\n        dispatch(setAlert('Login successful', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n\r\n        dispatch(setAlert('Oops! Login failed', 'danger'))\r\n    }\r\n}\r\n\r\nexport const signup = ({ name, email, password, confirmation }) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ name, email, password, confirmation })\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_ROOT_URL}/api/accounts/signup`, body, config)\r\n\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(login(email, password))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        })\r\n\r\n        dispatch(setAlert('Oops! Registration failed', 'danger'))\r\n    }\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch(setAlert('Logout successful', 'success'))\r\n    dispatch({ type: LOGOUT, email: null })\r\n}","import { v4 as uuid } from 'uuid'\r\nimport { SET_ALERT, REMOVE_ALERT } from './types'\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\r\n    const id = uuid()\r\n    dispatch({\r\n        type: SET_ALERT,\r\n        payload: { msg, alertType, id }\r\n    })\r\n\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout)\r\n}","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { logout } from '../actions/auth'\r\n\r\nconst Navbar = ({ logout, email }) => {\r\n    return (\r\n        <>\r\n            <h2 className=\"main__owner-address\">{email}</h2>\r\n\r\n            <NavLink className=\"btn btn-sm btn-outline-primary main__nav-btn\" exact to=\"/inbox\">\r\n                Inbox\r\n            </NavLink>\r\n            <NavLink className=\"btn btn-sm btn-outline-primary main__compose-btn\" to=\"/compose\">\r\n                Compose\r\n            </NavLink>\r\n            <NavLink className=\"btn btn-sm btn-outline-primary main__nav-btn\" to=\"/sent\">\r\n                Sent\r\n            </NavLink>\r\n            <NavLink className=\"btn btn-sm btn-outline-primary main__nav-btn\" to=\"/archive\">\r\n                Archive\r\n            </NavLink>\r\n            <NavLink className=\"btn btn-sm btn-outline-primary main__nav-btn\" to=\"/trash\">\r\n                Trash\r\n            </NavLink>\r\n            <Link className=\"btn btn-sm btn-outline-primary main__logout-btn\" to=\"/logout\" onClick={logout}>\r\n                Log Out\r\n            </Link>\r\n\r\n            <hr className=\"main__seperator\" />\r\n        </>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    email: PropTypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({ email: state.auth.email })\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar)","import React from 'react'\r\nimport Navbar from '../components/Navbar'\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <div>\r\n            <div className=\"main\">\r\n                <div className=\"container\">\r\n                    <Navbar />\r\n\r\n                    <div className=\"container\">\r\n                        {props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Helmet } from 'react-helmet'\r\nimport { connect } from 'react-redux'\r\nimport axios from 'axios'\r\nimport PropTypes from 'prop-types'\r\nimport Layout from '../hocs/Layout'\r\nimport { logout } from '../actions/auth'\r\nimport { setAlert } from '../actions/alert'\r\n\r\nconst Compose = ({ setAlert, isAuthenticated, logout, email }) => {\r\n    const [isSent, setIsSent] = useState(false)\r\n\r\n    const [formData, setFormData] = useState({\r\n        sender: email,\r\n        recipients: '',\r\n        subject: '',\r\n        composeBody: ''\r\n    })\r\n\r\n    const { sender, recipients, subject, composeBody } = formData\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n    if (!isAuthenticated) {\r\n        logout()\r\n        return <Redirect to=\"/logout\" />\r\n    }\r\n\r\n    if (isSent) {\r\n        return <Redirect to=\"/sent\" />\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        }\r\n\r\n        const body = JSON.stringify({\r\n            sender: sender,\r\n            recipients: recipients,\r\n            subject: subject,\r\n            body: composeBody\r\n        })\r\n\r\n        try {\r\n            axios.post(`${process.env.REACT_APP_API_ROOT_URL}/api/emails/compose`, body, config)\r\n            .then(res => {\r\n                if (res.data.success) {\r\n                    setAlert(res.data.success, 'success')\r\n                    setIsSent(true)\r\n                } else {\r\n                    setAlert(`Oops! ${res.data.error}`, 'danger')\r\n                }\r\n            })\r\n        } catch(_err) {\r\n            setAlert('Oops! Something went wrong', 'danger')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Helmet>\r\n                <title>Compose - Mail</title>\r\n\r\n                <meta name=\"You can compose and send messages in here\" content=\"Compose page\" />\r\n            </Helmet>\r\n\r\n            <div className=\"main__compose\">\r\n                <h3 className=\"main__compose__heading\">New Email</h3>\r\n\r\n                <form onSubmit={onSubmit}>\r\n                    <div className=\"form-group main__compose__sender\">\r\n                        From:   \r\n                        <input disabled className=\"form-control main__compose__sender__inner\"\r\n                            name=\"sender\" value={sender}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group main__compose__recipients\">\r\n                        To: \r\n                        <input autoFocus className=\"form-control main__compose__recipients__inner\" \r\n                            name=\"recipients\" placeholder=\"Recipient(s)\" value={recipients} onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group main__compose__subject\">\r\n                        <input className=\"form-control main__compose__subject__inner\" placeholder=\"Subject\" \r\n                            name=\"subject\" value={subject} onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group main__compose__body\">\r\n                        <textarea className=\"form-control main__compose__body__inner\" placeholder=\"Body\" \r\n                            name=\"composeBody\" onChange={onChange} value={composeBody}\r\n                        />\r\n                    </div>\r\n                    <input type=\"submit\" className=\"btn btn-primary main__compose__submit-btn\" />\r\n                </form>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nCompose.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    logout: PropTypes.func.isRequired,\r\n    email: PropTypes.string.isRequired,\r\n    setAlert: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    email: state.auth.email\r\n})\r\n\r\nexport default connect(mapStateToProps, { setAlert, logout })(Compose)"],"sourceRoot":""}