{"version":3,"sources":["actions/auth.js","actions/alert.js","components/Auth.js","containers/Login.js"],"names":["login","email","password","dispatch","a","config","headers","body","JSON","stringify","axios","post","process","res","type","LOGIN_SUCCESS","payload","data","setAlert","LOGIN_FAIL","signup","name","confirmation","SIGNUP_SUCCESS","SIGNUP_FAIL","logout","LOGOUT","msg","alertType","timeout","id","uuid","SET_ALERT","setTimeout","REMOVE_ALERT","Auth","formDetails","submitValue","onSubmit","map","item","index","className","autoFocus","isAutoFocus","placeholder","value","onChange","connect","state","isAuthenticated","auth","useState","formData","setFormData","e","target","to","content","preventDefault"],"mappings":"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","file":"static/js/9.3d5e93f8.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { setAlert } from './alert'\r\nimport {\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n} from './types'\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ email, password })\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_ROOT_URL}/api/token/`, body, config)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data,\r\n            email: email\r\n        })\r\n\r\n        dispatch(setAlert('Login successful', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n\r\n        dispatch(setAlert('Oops! Login failed', 'danger'))\r\n    }\r\n}\r\n\r\nexport const signup = ({ name, email, password, confirmation }) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ name, email, password, confirmation })\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_ROOT_URL}/api/accounts/signup`, body, config)\r\n\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(login(email, password))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        })\r\n\r\n        dispatch(setAlert('Oops! Registration failed', 'danger'))\r\n    }\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch(setAlert('Logout successful', 'success'))\r\n    dispatch({ type: LOGOUT, email: null })\r\n}","import { v4 as uuid } from 'uuid'\r\nimport { SET_ALERT, REMOVE_ALERT } from './types'\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\r\n    const id = uuid()\r\n    dispatch({\r\n        type: SET_ALERT,\r\n        payload: { msg, alertType, id }\r\n    })\r\n\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout)\r\n}","import React from 'react'\r\n\r\nconst Auth = ({ formDetails, submitValue, onSubmit }) => {\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                {formDetails.map((item, index) => {\r\n                    return (\r\n                        <div className=\"form-group\" key={index}>\r\n                            <input autoFocus={item.isAutoFocus} \r\n                                className=\"form-control auth__subsection__subsection__form__input\"\r\n                                type={item.type} placeholder={item.placeholder} name={item.name}\r\n                                value={item.value} onChange={item.onChange} \r\n                            />\r\n                        </div>\r\n                    )\r\n                })}\r\n                \r\n                <input className=\"btn btn-primary auth__subsection__subsection__form__btn\" type=\"submit\" \r\n                    value={submitValue} \r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Auth","import React, { useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { Helmet } from 'react-helmet'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { login } from '../actions/auth'\r\nimport Auth from '../components/Auth'\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const { email, password } = formData\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n    const formDetails = [\r\n        {\r\n            isAutoFocus: true,\r\n            type: 'email',\r\n            placeholder: 'Email Address',\r\n            name: 'email',\r\n            value: email,\r\n            onChange: onChange\r\n        },\r\n        {\r\n            isAutoFocus: false,\r\n            type: 'password',\r\n            placeholder: 'Password',\r\n            name: 'password',\r\n            value: password,\r\n            onChange: onChange\r\n        }\r\n    ]\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        login(email, password)\r\n    }\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/inbox\" /> \r\n    }\r\n    \r\n    return (\r\n        <div className=\"container-fluid auth\">\r\n            <Helmet>\r\n                <title>Login - Mail</title>\r\n\r\n                <meta name=\"Login to get the best messaging experience\" content=\"login page\" />\r\n            </Helmet>\r\n\r\n            <div className=\"auth__subsection\">\r\n                <div className=\"auth__subsection__subsection\">\r\n                    <div className=\"auth__subsection__subsection__form\">\r\n                        <h2 className=\"auth__subsection__subsection__form__heading\">Login</h2>\r\n\r\n                        <Auth\r\n                            formDetails={formDetails} \r\n                            submitValue=\"Login\" \r\n                            onSubmit={onSubmit} \r\n                        />\r\n                    \r\n                        <small className=\"auth__subsection__subsection__form__small\">\r\n                            Don't have an account? \r\n                            <Link className=\"auth__subsection__subsection__form__small__link\" \r\n                                to=\"/register\"\r\n                            >\r\n                                Register\r\n                            </Link>\r\n                        </small>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login)"],"sourceRoot":""}