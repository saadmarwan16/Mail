{"version":3,"sources":["actions/types.js","reducers/alert.js","reducers/auth.js","reducers/mailbox.js","reducers/index.js","store.js","Alert.js","App.js","reportWebVitals.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","SIGNUP_SUCCESS","SIGNUP_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","MAILBOX_LOADING","MAILBOX_LOAD_SUCCESS","MAILBOX_LOAD_FAIL","LOGOUT","initialState","jwt","require","token","localStorage","getItem","isAuthenticated","decodedToken","decode","complete","dateNow","Date","payload","exp","getTime","_err","isTokenValid","loading","email","mailboxLoading","isMailboxSwitched","combineReducers","alert","state","action","type","filter","id","auth","setItem","access","removeItem","mailbox","mailsLength","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","connect","alerts","length","map","className","alertType","role","msg","Archive","lazy","Compose","Home","Inbox","Login","Logout","Register","Sent","SingleMail","Trash","NotFound","App","fallback","color","height","width","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51207306.chunk.js","sourcesContent":["export const SET_ALERT = 'SET_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\nexport const MAILBOX_LOADING = 'MAILBOX_LOADING'\r\nexport const MAILBOX_LOAD_SUCCESS = 'MAILBOX_LOAD_SUCCESS'\r\nexport const MAILBOX_LOAD_FAIL = 'MAILBOX_LOAD_FAIL'\r\nexport const LOGOUT = 'LOGOUT'","import { SET_ALERT, REMOVE_ALERT } from '../actions/types'\r\n\r\nconst initialState = []\r\n\r\n// eslint-disable-next-line\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action\r\n\r\n    switch(type) {\r\n        case SET_ALERT:\r\n            return [...state, payload]\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload)\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT\r\n} from '../actions/types'\r\n\r\nvar jwt = require('jsonwebtoken')\r\n\r\nconst isTokenValid = () => {\r\n    const token = localStorage.getItem('token')\r\n    const decodedToken = jwt.decode(token, {complete: true})\r\n    const dateNow = new Date()\r\n\r\n    try {\r\n        return decodedToken.payload.exp < dateNow.getTime()\r\n    } catch(_err) {\r\n        return null\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: isTokenValid(),\r\n    loading: false,\r\n    email: localStorage.getItem('email')\r\n}\r\n\r\n// eslint-disable-next-line\r\nexport default function(state = initialState, action) {\r\n    const { type, payload, email } = action\r\n\r\n    switch(type) {\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.access)\r\n            localStorage.setItem('email', email)\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                token: payload.access,\r\n                email: email\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                loading: true\r\n            }\r\n        case SIGNUP_FAIL:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('token')\r\n            localStorage.removeItem('email')\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n                email: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { MAILBOX_LOADING, MAILBOX_LOAD_SUCCESS, MAILBOX_LOAD_FAIL } from '../actions/types'\r\n\r\nconst initialState = {\r\n    mailboxLoading: true,\r\n    isMailboxSwitched: false\r\n}\r\n\r\n// eslint-disable-next-line\r\nexport default function(state=initialState, action) {\r\n    const { type, mailsLength } = action\r\n\r\n    switch(type) {\r\n        case MAILBOX_LOADING:\r\n            return {\r\n                ...state,\r\n                mailboxLoading: true,\r\n                isMailboxSwitched: false\r\n            }\r\n        case MAILBOX_LOAD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                mailboxLoading: false,\r\n                isMailboxSwitched: mailsLength === 0\r\n            }\r\n        case MAILBOX_LOAD_FAIL:\r\n            return {\r\n                ...state,\r\n                mailboxLoading: false,\r\n                isMailboxSwitched: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport alert from './alert'\r\nimport auth from './auth'\r\nimport mailbox from './mailbox'\r\n\r\nexport default combineReducers({\r\n    alert,\r\n    auth,\r\n    mailbox\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Alert = ({ alerts }) => alerts !== null && alerts.length > 0 && alerts.map(alert => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`} role=\"alert\">\r\n        { alert.msg }\r\n    </div>\r\n))\r\n\r\nAlert.propTypes = {\r\n    alerts: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    alerts: state.alert\r\n})\r\n\r\nexport default connect(mapStateToProps)(Alert)","import React, { lazy, Suspense } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport Alert from './Alert'\r\n\r\nimport './sass/main.scss'\r\n\r\nconst Archive = lazy(() => import('./containers/Archive'))\r\nconst Compose = lazy(() => import('./containers/Compose'))\r\nconst Home = lazy(() => import('./containers/Home'))\r\nconst Inbox = lazy(() => import('./containers/Inbox'))\r\nconst Login = lazy(() => import('./containers/Login'))\r\nconst Logout = lazy(() => import('./containers/Logout'))\r\nconst Register = lazy(() => import('./containers/Register'))\r\nconst Sent = lazy(() => import('./containers/Sent'))\r\nconst SingleMail = lazy(() => import('./containers/SingleMail'))\r\nconst Trash = lazy(() => import('./containers/Trash'))\r\nconst NotFound = lazy(() => import('./containers/NotFound'))\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<Provider store={store}>\r\n\t\t\t<Alert />\r\n\t\t\t\r\n\t\t\t<Router>\r\n\t\t\t\t<Suspense \r\n\t\t\t\t\tfallback={\r\n\t\t\t\t\t\t<div className=\"main__fallback\">\r\n\t\t\t\t\t\t\t<Loader\r\n\t\t\t\t\t\t\t\ttype=\"Oval\"\r\n\t\t\t\t\t\t\t\tcolor=\"#fff\"\r\n\t\t\t\t\t\t\t\theight={40}\r\n\t\t\t\t\t\t\t\twidth={40}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path=\"/login\" component={Login} />\r\n\t\t\t\t\t\t<Route exact path=\"/logout\" component={Logout} />\r\n\t\t\t\t\t\t<Route exact path=\"/register\" component={Register} />\r\n\t\t\t\t\t\t<Route exact path=\"/archive\" component={Archive} />\r\n\t\t\t\t\t\t<Route exact path=\"/compose\" component={Compose} />\r\n\t\t\t\t\t\t<Route exact path=\"/\" component={Home} />\r\n\t\t\t\t\t\t<Route exact path=\"/inbox\" component={Inbox} />\r\n\t\t\t\t\t\t<Route exact path=\"/sent\" component={Sent} />\r\n\t\t\t\t\t\t<Route exact path=\"/:mailbox/:id\" component={SingleMail} />\r\n\t\t\t\t\t\t<Route exact path=\"/trash\" component={Trash} />\r\n\t\t\t\t\t\t<Route component={NotFound} />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Suspense>\r\n\t\t\t</Router>\r\n\t\t</Provider>\r\n\t)\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}